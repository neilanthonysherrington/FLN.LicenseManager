@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <div class="btn-group" role="group">
            <button @onclick="Logout" type="button" class="btn btn-secondary user-button login-text-btn">Logout</button>
            <button @onclick="Logout" type="button" class="btn btn-secondary user-button">
                <i class="oi oi-account-logout"></i>
            </button>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="btn-group" role="group">
            <button @onclick="NavigateLogin" type="button" class="btn btn-secondary user-button login-text-btn">Login</button>
            <button @onclick="NavigateLogin" type="button" class="btn btn-secondary user-button">
                <i class="oi oi-account-login"></i>
            </button>
        </div>
    </NotAuthorized>
</AuthorizeView>





@code {
    private void NavigateLogin()
    {
        NavigationManager.NavigateTo("/login");
    }

   

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }
}
